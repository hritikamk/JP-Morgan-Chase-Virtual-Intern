From 1ef011d764745327963d2779785fa440d13a98b0 Mon Sep 17 00:00:00 2001
From: hritikamk<kucheriya.hritika2000@gmail.com>
Date: Thu, 1 Jul 2021 10:41:04 +0530
Subject: [PATCH] internship commit

---
 client3.py     | 13 +++++++++----
 client_test.py |  2 ++
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..1492383 100644
--- a/client3.py
+++ b/client3.py
@@ -35,25 +35,30 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price )/ 2	
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if price_b == 0 : 
+		return 
+	return price_a/price_b
 
 # Main
 if __name__ == "__main__":
+	
 
 	# Query the price once every N seconds.
+	prices = {}
 	for _ in iter(range(N)):
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
 		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
+			stock, bid_price, ask_price, price = getDataPoint(quote	)
+			prices[stock]= price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..2fb5b25 100644
--- a/client_test.py
+++ b/client_test.py
@@ -15,6 +15,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    self.assertEqual(getDataPoint(quote),dataPoint)
+    self.assertEqual(1,1)
 
 
   """ ------------ Add more unit tests ------------ """
-- 
2.25.1
